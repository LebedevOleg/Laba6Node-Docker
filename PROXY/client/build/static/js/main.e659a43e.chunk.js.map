{"version":3,"sources":["context/authContext.js","pages/AuthPage.js","ForumItem/modal/ChangeMessage.modal.js","ForumItem/BlockMessItem.js","ForumItem/sendMessItem.js","ForumItem/modal/BlockUser.modal.js","pages/ForumPage.js","pages/RegisterPage.js","pages/ImportPage.js","components/NewsObject.js","pages/NewsPage.js","hooks/auth.hook.js","components/Loader.js","App.js","routes.js","reportWebVitals.js","index.js","pages/AuthPage.module.css","pages/RegisterPage.module.css","ForumItem/BlockMessItem.module.css"],"names":["noop","AuthContext","createContext","token","userId","userLogin","login","logout","isAuthent","isAdmin","isBlock","AuthPage","auth","useContext","useState","password","form","setForm","changeHandler","event","target","name","value","authHandler","a","axios","post","catch","error","response","window","M","toast","html","data","message","request","authCheck","IsAdmin","IsBlock","console","log","id","stl","inputs","username","type","placeholder","autofocus","required","onChange","actions","submit","onClick","href","Modal","state","setState","postId","text","Fragment","style","cursor","className","for","then","res","e","BlockMessItem","debug","numLikes","setNumLikes","like","setLike","date","split","time","DeleteHandler","GetLikesHandler","useCallback","GetUsetLike","userID","headers","authorization","ChangeLike","useEffect","setInterval","new","dangerouslySetInnerHTML","__html","DOMPurify","sanitize","class","SendMessTodo","sendPost","trim","BlockUser","users","setUsers","getUsers","get","changeBlockHandler","blocked","checked","UserSpaun","user","defaultChecked","is_block","map","ForumPage","history","useHistory","sendMessage","posts","setPosts","lastID","setlastID","getPosts","Authorization","getLastPost","lastId","rel","preventDefault","push","Array","from","row","RegisterPage","email","registerHandler","msg","errors","autoFocus","XLSX","require","parse","Parser","colourStyles","control","styles","backgroundColor","option","isDisabled","isFocused","isSelected","color","optionsSwitch","label","Import","Date","dateStart","setDateStart","dateEnd","setDateEnd","setValue","formatDate","setFormatDate","formatCount","setFormatCount","upDown","setUpDown","listExport","selectedItems","download","filename","charset","element","document","createElement","setAttribute","encodeURI","display","body","appendChild","click","removeChild","ImportFileDate","writeFile","likes","setDate","getDate","StartDate","toISOString","EndDate","rows","replaceAll","count","FileName","now","toString","JSON","stringify","join","csvFile","delimiter","header","workSheet","utils","json_to_sheet","workBook","book_new","book_append_sheet","write","bookType","ImportFileCount","Count","side","handleChangeFormat","changeListExport","format","max","action","options","isMulti","NewsObject","news","title","_text","link","NewsPage","setNews","getNews","jsonRes","rss","channel","item","object","storageName","Loader","App","setToken","setUserId","ready","setReady","setUserLogin","setIsAdmin","setIsBlock","megaToken","admin","block","localStorage","setItem","removeItem","getItem","useAuth","routes","path","exact","to","Provider","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById","module","exports"],"mappings":"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","file":"static/js/main.e659a43e.chunk.js","sourcesContent":["import { createContext } from \"react\";\r\nfunction noop() {}\r\n\r\nexport const AuthContext = createContext({\r\n  token: null,\r\n  userId: null,\r\n  userLogin: null,\r\n  login: noop,\r\n  logout: noop,\r\n  isAuthent: false,\r\n  isAdmin: false,\r\n  isBlock: false,\r\n});\r\n","import React, { useState, useContext } from \"react\";\r\nimport stl from \"./AuthPage.module.css\";\r\nimport axios from \"axios\";\r\nimport { AuthContext } from \"../context/authContext\";\r\n\r\nexport const AuthPage = () => {\r\n  const auth = useContext(AuthContext);\r\n  const [form, setForm] = useState({\r\n    login: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const changeHandler = (event) => {\r\n    setForm({ ...form, [event.target.name]: event.target.value });\r\n  };\r\n  const authHandler = async () => {\r\n    const message = \"\";\r\n    try {\r\n      const authCheck = await axios\r\n        .post(\"/api/auth/login\", { ...form })\r\n        .catch((error) => {\r\n          if (error.response) {\r\n            if (window.M) {\r\n              window.M.toast({ html: error.response.data.message });\r\n            }\r\n          } else if (error.request) {\r\n            if (window.M) {\r\n              window.M.toast({ html: error.response.data.message });\r\n            }\r\n          }\r\n        });\r\n      auth.login(\r\n        authCheck.data.token,\r\n        authCheck.data.userId,\r\n        authCheck.data.userLogin,\r\n        authCheck.data.IsAdmin,\r\n        authCheck.data.IsBlock\r\n      );\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div id={stl.login}>\r\n        <h1>Форма входа</h1>\r\n        <fieldset id={stl.inputs}>\r\n          <input\r\n            id={stl.username}\r\n            type=\"text\"\r\n            name=\"login\"\r\n            placeholder=\"Логин\"\r\n            autofocus=\"true\"\r\n            required=\"true\"\r\n            onChange={changeHandler}\r\n          />\r\n          <input\r\n            id={stl.password}\r\n            type=\"password\"\r\n            name=\"password\"\r\n            placeholder=\"Пароль\"\r\n            required=\"true\"\r\n            onChange={changeHandler}\r\n          />\r\n        </fieldset>\r\n        <fieldset id={stl.actions}>\r\n          <input\r\n            type=\"submit\"\r\n            id={stl.submit}\r\n            value=\"ВОЙТИ\"\r\n            onClick={authHandler}\r\n          />\r\n          <a href=\"/register\">Регистрация</a>\r\n        </fieldset>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n/* .then(res => {\r\n    console.log(res.data.token)                \r\n}) */\r\n","import axios from \"axios\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport \"./ChangeMessage.modal.css\";\r\n\r\nconst Modal = (post) => {\r\n  const [state, setState] = useState(false);\r\n  const [form, setForm] = useState({\r\n    postId: post.post.id,\r\n    text: \"\",\r\n  });\r\n  const changeHandler = (event) => {\r\n    setForm({ ...form, [event.target.name]: event.target.value });\r\n  };\r\n  const ChangeMessageHandler = () => {\r\n    try {\r\n      axios.post(\"/api/forum/updatePost\", { ...form }).then((res) => {\r\n        if (window.M) {\r\n          window.M.toast({ html: res.data.message });\r\n        }\r\n        setState(false);\r\n      });\r\n    } catch (e) {\r\n      console.log(e.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <a onClick={() => setState(true)} style={{ cursor: \"pointer\" }}>\r\n        Изменить сообщение\r\n      </a>\r\n\r\n      {state && (\r\n        <div className=\"modal\">\r\n          <div className=\"modal-body\">\r\n            <h1>Изменить сообщение</h1>\r\n            <div className=\"input-field col s12\">\r\n              <textarea\r\n                id=\"textarea1\"\r\n                name=\"text\"\r\n                className=\"materialize-textarea valid\"\r\n                required=\"\"\r\n                onChange={changeHandler}\r\n              >\r\n                {\" \"}\r\n              </textarea>\r\n              <label for=\"textarea1\">Ваше сообщение</label>\r\n              <button\r\n                className=\"btn waves-effect waves-light\"\r\n                type=\"submit\"\r\n                name=\"action\"\r\n                onClick={ChangeMessageHandler}\r\n              >\r\n                <i className=\"material-icons right\">Отправить</i>\r\n              </button>\r\n            </div>\r\n            <button onClick={() => setState(false)}>Закрыть окно</button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import axios from \"axios\";\r\nimport React, { useContext, useState, useEffect, useCallback } from \"react\";\r\nimport Modal from \"./modal/ChangeMessage.modal\";\r\nimport DOMPurify from \"dompurify\";\r\nimport stl from \"./BlockMessItem.module.css\";\r\nimport { AuthContext } from \"../context/authContext\";\r\n\r\nconst BlockMessItem = (post) => {\r\n  const auth = useContext(AuthContext);\r\n  const { token } = useContext(AuthContext);\r\n  console.debug(token);\r\n  const [numLikes, setNumLikes] = useState();\r\n  const [like, setLike] = useState();\r\n  const date = post.post.date.split(\"T\")[0];\r\n  const time = post.post.date.split(\"T\")[1].split(\".\")[0];\r\n\r\n  const DeleteHandler = async () => {\r\n    await axios\r\n      .post(\"/api/forum/deletePost\", { postId: post.post.id })\r\n      .then((res) => {\r\n        if (window.M) {\r\n          window.M.toast({ html: res.data.message });\r\n        }\r\n      });\r\n  };\r\n\r\n  const GetLikesHandler = useCallback(async () => {\r\n    try {\r\n      await axios\r\n        .post(\"/api/forum/likes\", { postId: post.post.id })\r\n        .then((res) => {\r\n          setNumLikes(res.data.message);\r\n        });\r\n      GetUsetLike();\r\n    } catch (e) {\r\n      console.error(e.message);\r\n    }\r\n  }, []);\r\n\r\n  const GetUsetLike = useCallback(async () => {\r\n    await axios\r\n      .post(\r\n        \"/api/forum/Userlike\",\r\n        { postId: post.post.id, userID: auth.userId },\r\n        {\r\n          headers: {\r\n            authorization: `Bearer ${token}`,\r\n          },\r\n        }\r\n      )\r\n      .then((res) => {\r\n        console.log(res.data.message);\r\n        if (res.data.message) {\r\n          setLike(true);\r\n        } else {\r\n          setLike(false);\r\n        }\r\n      });\r\n  }, []);\r\n\r\n  const ChangeLike = async () => {\r\n    await axios.post(\"/api/forum/chngeLike\", {\r\n      postId: post.post.id,\r\n      userID: auth.userId,\r\n    });\r\n  };\r\n  useEffect(() => {\r\n    GetLikesHandler();\r\n    GetUsetLike();\r\n    var run = setInterval(() => GetLikesHandler(), 7000);\r\n  }, [GetLikesHandler, GetUsetLike]);\r\n\r\n  return (\r\n    <div>\r\n      <div className={post.new ? stl.new : \"\"}>\r\n        <div className=\"col s12 m7\">\r\n          <div className=\"card horizontal\">\r\n            <div className=\"card-image\"></div>\r\n            <div className=\"card-stacked\">\r\n              <p>\r\n                Отправил:{\" \"}\r\n                {post.post.login === null ? \"[DELETED] \" : post.post.login} в{\" \"}\r\n                {date} {time}\r\n              </p>\r\n              <div className=\"card-content\">\r\n                <p\r\n                  dangerouslySetInnerHTML={{\r\n                    __html: DOMPurify.sanitize(post.post.text),\r\n                  }}\r\n                ></p>\r\n              </div>\r\n              {auth.userLogin === post.post.login ? (\r\n                <div className=\"card-action\">\r\n                  <a>\r\n                    <Modal post={(post.post, post.post)} />\r\n                  </a>\r\n                  <a onClick={DeleteHandler} style={{ cursor: \"pointer\" }}>\r\n                    Удалить\r\n                  </a>\r\n                  {like ? (\r\n                    <a class=\"btn right\" onClick={ChangeLike}>\r\n                      Нравится {numLikes}\r\n                    </a>\r\n                  ) : (\r\n                    <a class=\"btn-flat right\" onClick={ChangeLike}>\r\n                      Нравится {numLikes}\r\n                    </a>\r\n                  )}\r\n                </div>\r\n              ) : (\r\n                <div className=\"card-action\">\r\n                  {like ? (\r\n                    <a class=\"btn right\" onClick={ChangeLike}>\r\n                      Нравится {numLikes}\r\n                    </a>\r\n                  ) : (\r\n                    <a class=\"btn-flat right\" onClick={ChangeLike}>\r\n                      Нравится {numLikes}\r\n                    </a>\r\n                  )}\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BlockMessItem;\r\n","import React, { useContext, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { AuthContext } from \"../context/authContext\";\r\n\r\nconst SendMessTodo = () => {\r\n  const auth = useContext(AuthContext);\r\n  const [form, setForm] = useState({\r\n    userId: auth.userId,\r\n    text: \"\",\r\n  });\r\n\r\n  const changeHandler = (event) => {\r\n    setForm({ ...form, [event.target.name]: event.target.value });\r\n  };\r\n\r\n  const sendPost = async (event) => {\r\n    if (form.text.trim() === \"\") {\r\n      if (window.M) {\r\n        window.M.toast({ html: \"Нельзя отправить пустое сообщение\" });\r\n      }\r\n      return;\r\n    }\r\n    try {\r\n      const addPost = await axios\r\n        .post(\"/api/forum/sendPost\", { ...form })\r\n        .then((res) => {\r\n          if (window.M) {\r\n            window.M.toast({ html: res.data.message });\r\n          }\r\n        })\r\n        .catch((error) => {});\r\n    } catch (e) {}\r\n  };\r\n  return (\r\n    <div>\r\n      {!auth.isBlock ? (\r\n        <div className=\"row\">\r\n          <div className=\"col s12\">\r\n            <div className=\"row\">\r\n              <div className=\"input-field col s12\">\r\n                <textarea\r\n                  id=\"textarea1\"\r\n                  name=\"text\"\r\n                  className=\"materialize-textarea validate\"\r\n                  type=\"text\"\r\n                  required=\"\"\r\n                  onChange={changeHandler}\r\n                ></textarea>\r\n                <label for=\"textarea1\">Ваше сообщение</label>\r\n                <button\r\n                  className=\"btn waves-effect waves-light\"\r\n                  type=\"submit\"\r\n                  name=\"action\"\r\n                  onClick={sendPost}\r\n                >\r\n                  <i className=\"material-icons right\">Отправить</i>\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div>ВЫ ЗАБЛОКИРОВАНЫ И НЕ МОЖЕТЕ ПИСАТЬ СООБЩЕНИЯ</div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SendMessTodo;\r\n","import axios from \"axios\";\r\nimport React, { useState, useEffect, useCallback } from \"react\";\r\n\r\nimport \"./ChangeMessage.modal.css\";\r\n\r\nconst BlockUser = () => {\r\n  const [state, setState] = useState(false);\r\n  const [users, setUsers] = useState([]);\r\n\r\n  const getUsers = useCallback(() => {\r\n    axios.get(\"/api/forum/getAllUsers\").then(async (res) => {\r\n      setUsers(res.data);\r\n    });\r\n  }, []);\r\n\r\n  const changeBlockHandler = async (event) => {\r\n    await axios\r\n      .post(\"/api/forum/blockUser\", {\r\n        userID: event.target.name,\r\n        blocked: event.target.checked,\r\n      })\r\n      .then((res) => {\r\n        if (window.M) {\r\n          window.M.toast({ html: res.data.message });\r\n        }\r\n      });\r\n  };\r\n\r\n  const UserSpaun = (user) => {\r\n    return (\r\n      <React.Fragment>\r\n        <h6>\r\n          {user.login}\r\n          <div className=\"switch\">\r\n            <label>\r\n              разблокировать\r\n              <input\r\n                type=\"checkbox\"\r\n                name={user.id}\r\n                defaultChecked={user.is_block}\r\n                onChange={changeBlockHandler}\r\n              />\r\n              <span className=\"lever\"></span>\r\n              заблокировать\r\n            </label>\r\n          </div>\r\n        </h6>\r\n      </React.Fragment>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <a\r\n        onClick={() => {\r\n          getUsers();\r\n          setState(true);\r\n        }}\r\n        style={{ cursor: \"pointer\" }}\r\n      >\r\n        Блокировка пользователей\r\n      </a>\r\n\r\n      {state && (\r\n        <div className=\"modal\">\r\n          <div className=\"modal-body\">\r\n            <h1>Блокировка пользователей</h1>\r\n            <div>\r\n              {users.map((user) => (\r\n                <p>{UserSpaun(user)}</p>\r\n              ))}\r\n            </div>\r\n            <p />\r\n            <button\r\n              onClick={() => {\r\n                setUsers([]);\r\n                setState(false);\r\n              }}\r\n            >\r\n              Закрыть окно\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\nexport default BlockUser;\r\n","import axios from \"axios\";\r\nimport React, {\r\n  useState,\r\n  useEffect,\r\n  useCallback,\r\n  useContext,\r\n  Component,\r\n} from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport { AuthContext } from \"../context/authContext\";\r\nimport BlockMessItem from \"../ForumItem/BlockMessItem\";\r\nimport SendMessTodo from \"../ForumItem/sendMessItem\";\r\nimport Modal from \"../ForumItem/modal/ChangeMessage.modal\";\r\nimport BlockUser from \"../ForumItem/modal/BlockUser.modal\";\r\n\r\nexport const ForumPage = () => {\r\n  const history = useHistory();\r\n  const auth = useContext(AuthContext);\r\n  const { userId, token } = useContext(AuthContext);\r\n  const sendMessage = SendMessTodo();\r\n  const [posts, setPosts] = useState([]);\r\n  const [lastID, setlastID] = useState();\r\n  const getPosts = useCallback(async () => {\r\n    try {\r\n      await axios\r\n        .get(\"/api/forum/getPost\", {\r\n          headers: { Authorization: `Bearer ${auth.token}` },\r\n        })\r\n        .then(async (res) => {\r\n          await axios\r\n            .post(\r\n              \"/api/forum/setLastPost\",\r\n              { postId: res.data[0].id, userID: userId },\r\n              {\r\n                headers: {\r\n                  Authorization: `Bearer ${token}`,\r\n                },\r\n              }\r\n            )\r\n            .then((response) => {\r\n              console.log(response);\r\n            });\r\n          setPosts(res.data);\r\n        });\r\n    } catch (e) {\r\n      console.log(e.message);\r\n    }\r\n  }, []);\r\n\r\n  const getLastPost = useCallback(async () => {\r\n    await axios\r\n      .get(\"/api/forum/getLastPost\", {\r\n        headers: { Authorization: `Bearer ${auth.token}` },\r\n      })\r\n      .then(async (res) => {\r\n        setlastID(res.data.lastId);\r\n      });\r\n  }, []);\r\n  const setLastPost = useCallback(async () => {\r\n    try {\r\n      await axios\r\n        .post(\r\n          \"/api/forum/setLastPost\",\r\n          { postId: posts[0].id, userID: auth.userId },\r\n          {\r\n            headers: {\r\n              Authorization: `Bearer ${auth.token}`,\r\n            },\r\n          }\r\n        )\r\n        .then((res) => console.debug(res.data));\r\n    } catch (e) {\r\n      console.debug(e.message);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getPosts();\r\n    getLastPost();\r\n    var run = setInterval(() => getPosts(), 5000);\r\n    var run1 = setInterval(() => getLastPost(), 5000);\r\n  }, [getPosts, getLastPost]);\r\n\r\n  const LogoutHandler = (event) => {\r\n    event.preventDefault();\r\n    auth.logout();\r\n    history.push(\"/\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <head>\r\n        <link\r\n          href=\"https://fonts.googleapis.com/icon?family=Material+Icons\"\r\n          rel=\"stylesheet\"\r\n        ></link>\r\n      </head>\r\n      <nav>\r\n        <div className=\"nav-wrapper #689f38 light-green darken-2\">\r\n          <a className=\"brand-logo \">Страница форума</a>\r\n          <ul id=\"nav-mobile\" className=\"right hide-on-med-and-down \">\r\n            <li> Пользователь: {auth.userLogin}</li>\r\n            <li>\r\n              <a href=\"/news/\">Новости</a>\r\n            </li>\r\n            <li>\r\n              <a href=\"/forum/\">Форум</a>{\" \"}\r\n            </li>\r\n            <li>\r\n              <a href=\"/import/\">импорт сообщений</a>{\" \"}\r\n            </li>\r\n            <li>\r\n              <a href=\"/\" onClick={LogoutHandler}>\r\n                выход\r\n              </a>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </nav>\r\n      <h1>Сообщения</h1>\r\n\r\n      <div>\r\n        {Array.from(posts).map((row) => (\r\n          <BlockMessItem post={row} new={row.id <= lastID ? false : true} />\r\n        ))}\r\n      </div>\r\n      {sendMessage}\r\n      {auth.isAdmin ? <BlockUser /> : <div></div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ForumPage;\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport stl from \"./RegisterPage.module.css\";\r\nimport axios from \"axios\";\r\n\r\nexport const RegisterPage = () => {\r\n  const [form, setForm] = useState({\r\n    login: \"\",\r\n    password: \"\",\r\n    email: \"\",\r\n  });\r\n\r\n  const changeHandler = (event) => {\r\n    setForm({ ...form, [event.target.name]: event.target.value });\r\n  };\r\n\r\n  const registerHandler = async () => {\r\n    const message = \"\";\r\n    try {\r\n      axios\r\n        .post(\"/api/auth/register\", { ...form })\r\n        .then((res) => {\r\n          if (window.M) {\r\n            window.M.toast({ html: res.data.message });\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          if (error.response) {\r\n            if (window.M) {\r\n              if (!error.response.data.msg) {\r\n                window.M.toast({ html: error.response.data.message });\r\n              } else {\r\n                window.M.toast({ html: error.response.data.msg.errors[0].msg });\r\n              }\r\n            }\r\n          } else if (error.request) {\r\n            if (window.M) {\r\n              window.M.toast({ html: error.response.data.message });\r\n            }\r\n          }\r\n        });\r\n    } catch (e) {\r\n      message = e.message;\r\n      console.log(message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div id={stl.login}>\r\n      <h1>Форма регистрации</h1>\r\n      <fieldset id={stl.inputs}>\r\n        <input\r\n          id=\"email\"\r\n          name=\"email\"\r\n          type=\"email\"\r\n          placeholder=\"Электронная почта\"\r\n          autoFocus=\"true\"\r\n          onChange={changeHandler}\r\n          required\r\n        />\r\n        <input\r\n          id={stl.username}\r\n          name=\"login\"\r\n          type=\"text\"\r\n          placeholder=\"Логин\"\r\n          onChange={changeHandler}\r\n          required\r\n        />\r\n        <input\r\n          id={stl.password}\r\n          name=\"password\"\r\n          type=\"password\"\r\n          placeholder=\"Пароль\"\r\n          onChange={changeHandler}\r\n          required\r\n        />\r\n      </fieldset>\r\n      <fieldset id={stl.actions}>\r\n        <input\r\n          type=\"submit\"\r\n          id={stl.submit}\r\n          value=\"Зарегистрироваться\"\r\n          onClick={registerHandler}\r\n        />\r\n        <a href=\"/login\">ВОЙТИ</a>\r\n      </fieldset>\r\n    </div>\r\n  );\r\n};\r\n","import axios from \"axios\";\r\nimport React, {\r\n  useState,\r\n  useEffect,\r\n  useCallback,\r\n  useContext,\r\n  Component,\r\n} from \"react\";\r\nimport fs, { writeFileSync } from \"fs\";\r\nimport { useHistory } from \"react-router\";\r\nimport { AuthContext } from \"../context/authContext\";\r\nimport { DatePickerComponent } from \"@syncfusion/ej2-react-calendars\";\r\nimport Dropdown from \"react-dropdown\";\r\nimport Select from \"react-select\";\r\nimport \"react-dropdown/style.css\";\r\nconst XLSX = require(\"xlsx\");\r\nconst { Parser, parse } = require(\"json2csv\");\r\n\r\nconst colourStyles = {\r\n  control: (styles) => ({ ...styles, backgroundColor: \"white\" }),\r\n  option: (styles, { data, isDisabled, isFocused, isSelected }) => {\r\n    return {\r\n      ...styles,\r\n      backgroundColor: isDisabled ? \"red\" : \"white\",\r\n      color: \"black\",\r\n      isSelected: \"grey\",\r\n      cursor: isDisabled ? \"not-allowed\" : \"default\",\r\n    };\r\n  },\r\n};\r\n\r\nconst optionsSwitch = [\r\n  { value: \"like\", label: \"Колличество лайков\" },\r\n  { value: \"email\", label: \"email отправителя\" },\r\n];\r\n\r\nexport const Import = () => {\r\n  const [dateStart, setDateStart] = useState(new Date());\r\n  const [dateEnd, setDateEnd] = useState(new Date());\r\n  const [value, setValue] = useState(0);\r\n  const [formatDate, setFormatDate] = useState(\"\");\r\n  const [formatCount, setFormatCount] = useState(\"\");\r\n  const history = useHistory();\r\n  const auth = useContext(AuthContext);\r\n  const [upDown, setUpDown] = useState(false);\r\n\r\n  var listExport = {\r\n    selectedItems: null,\r\n  };\r\n\r\n  const LogoutHandler = (event) => {\r\n    event.preventDefault();\r\n    auth.logout();\r\n    history.push(\"/\");\r\n  };\r\n\r\n  const options = [\r\n    { value: 1, label: \"1\" },\r\n    { value: 5, label: \"5\" },\r\n    { value: 10, label: \"10\" },\r\n  ];\r\n  const handleChangeCount = (event) => {\r\n    setValue(event.value);\r\n  };\r\n  const handleChangeDateStart = (event) => {\r\n    setDateStart(event.value);\r\n  };\r\n  const handleChangeDateEnd = (event) => {\r\n    setDateEnd(event.value);\r\n  };\r\n\r\n  function download(filename, text, type, charset = \"utf-8\") {\r\n    var element = document.createElement(\"a\");\r\n    element.setAttribute(\r\n      \"href\",\r\n      `data:text/${type};charset=${charset},` + encodeURI(text)\r\n    );\r\n    element.setAttribute(\"download\", filename);\r\n\r\n    element.style.display = \"none\";\r\n    document.body.appendChild(element);\r\n\r\n    element.click();\r\n\r\n    document.body.removeChild(element);\r\n  }\r\n\r\n  // *!! здесь функция отправки по дате\r\n  const ImportFileDate = async () => {\r\n    var writeFile = [];\r\n    var login = \"\";\r\n    var likes = false;\r\n    var email = false;\r\n    dateEnd.setDate(dateEnd.getDate() + 2);\r\n    await axios\r\n      .post(\"/api/forum/importDataDate\", {\r\n        StartDate: dateStart.toISOString().split(\"T\")[0],\r\n        EndDate: dateEnd.toISOString().split(\"T\")[0],\r\n      })\r\n      .then(async (res) => {\r\n        res.data.rows.map((row) => {\r\n          if (row.login == null) {\r\n            login = \"[DELETED]\";\r\n          } else {\r\n            login = row.login;\r\n          }\r\n          try {\r\n            if (\r\n              listExport[0].value === \"like\" ||\r\n              listExport[1].value === \"like\"\r\n            ) {\r\n              likes = true;\r\n            }\r\n          } catch (e) {}\r\n          try {\r\n            if (\r\n              listExport[0].value == \"email\" ||\r\n              listExport[1].value == \"email\"\r\n            ) {\r\n              email = true;\r\n            }\r\n          } catch (e) {}\r\n          if (email && likes) {\r\n            writeFile.push({\r\n              id: row.id,\r\n              login: login,\r\n              text: row.text.replaceAll(\"\\n\", \"\"),\r\n              date: row.date,\r\n              email: row.email,\r\n              likes: row.count,\r\n            });\r\n          } else if (email && !likes) {\r\n            writeFile.push({\r\n              id: row.id,\r\n              login: login,\r\n              text: row.text.replaceAll(\"\\n\", \"\"),\r\n              date: row.date,\r\n              email: row.email,\r\n            });\r\n          } else if (!email && likes) {\r\n            writeFile.push({\r\n              id: row.id,\r\n              login: login,\r\n              text: row.text.replaceAll(\"\\n\", \"\"),\r\n              date: row.date,\r\n              likes: row.count,\r\n            });\r\n          } else {\r\n            writeFile.push({\r\n              id: row.id,\r\n              login: login,\r\n              text: row.text.replaceAll(\"\\n\", \"\"),\r\n              date: row.date,\r\n            });\r\n          }\r\n        });\r\n        var FileName = Date.now().toString() + \".\" + formatDate;\r\n        switch (formatDate) {\r\n          // !! УРА ОНО РАБОТАЕТ БЛЯТЬ!!!!!!! день на это дерьмо ушло!! !!!!!!!!!!!!!!!!!!!!!!\r\n          case \"json\":\r\n            var text = JSON.stringify(writeFile);\r\n            download(FileName, text, \"json\");\r\n            break;\r\n          case \"xml\":\r\n            var text = \"\";\r\n            if (email && likes) {\r\n              text =\r\n                '<?xml version=\"1.0\" encoding=\"utf-8\"?> \\n <forumPosts>' +\r\n                writeFile\r\n                  .map(\r\n                    ({ id, login, text, date, email, likes }) =>\r\n                      `<post category = \"${id}\">\\n <author> ${login}</author> \\n <content> ${text.replaceAll(\r\n                        \"<\",\r\n                        \"\"\r\n                      )}</content> \\n <date> ${date} </date>\\n <email>${email}</email> \\n <like>${likes}</like>\\n </post>`,\r\n                    \" \"\r\n                  )\r\n                  .join(\"\\n\") +\r\n                \"</forumPosts>\";\r\n            } else if (email && !likes) {\r\n              text =\r\n                '<?xml version=\"1.0\" encoding=\"utf-8\"?> \\n <forumPosts>' +\r\n                writeFile\r\n                  .map(\r\n                    ({ id, login, text, date, email, likes }) =>\r\n                      `<post category = \"${id}\">\\n <author> ${login}</author> \\n <content> ${text.replaceAll(\r\n                        \"<\",\r\n                        \"\"\r\n                      )}</content> \\n <date> ${date} </date>\\n <email>${email}</email>\\n </post>`,\r\n                    \" \"\r\n                  )\r\n                  .join(\"\\n\") +\r\n                \"</forumPosts>\";\r\n            } else if (!email && likes) {\r\n              text =\r\n                '<?xml version=\"1.0\" encoding=\"utf-8\"?> \\n <forumPosts>' +\r\n                writeFile\r\n                  .map(\r\n                    ({ id, login, text, date, email, likes }) =>\r\n                      `<post category = \"${id}\">\\n <author> ${login}</author> \\n <content> ${text.replaceAll(\r\n                        \"<\",\r\n                        \"\"\r\n                      )}</content> \\n <date> ${date} </date> \\n <like>${likes}</like>\\n </post>`,\r\n                    \" \"\r\n                  )\r\n                  .join(\"\\n\") +\r\n                \"</forumPosts>\";\r\n            } else {\r\n              text =\r\n                '<?xml version=\"1.0\" encoding=\"utf-8\"?> \\n <forumPosts>' +\r\n                writeFile\r\n                  .map(\r\n                    ({ id, login, text, date, email, likes }) =>\r\n                      `<post category = \"${id}\">\\n <author> ${login}</author> \\n <content> ${text.replaceAll(\r\n                        \"<\",\r\n                        \"\"\r\n                      )}</content> \\n <date> ${date} </date>\\n </post>`,\r\n                    \" \"\r\n                  )\r\n                  .join(\"\\n\") +\r\n                \"</forumPosts>\";\r\n            }\r\n\r\n            download(FileName, text, \"xml\");\r\n            break;\r\n\r\n          case \"csv\":\r\n            var opts = {\r\n              delimiter: \";\",\r\n              header: true,\r\n            };\r\n            const csvFile = parse(writeFile, opts);\r\n            download(FileName, csvFile, \"csv\", \"utf8\");\r\n            break;\r\n          case \"xlsx\":\r\n            const workSheet = XLSX.utils.json_to_sheet(writeFile);\r\n            const workBook = XLSX.utils.book_new();\r\n            XLSX.utils.book_append_sheet(workBook, workSheet, \"students\");\r\n            XLSX.write(workBook, { bookType: \"xlsx\", type: \"buffer\" });\r\n            XLSX.write(workBook, { bookType: \"xlsx\", type: \"binary\" });\r\n            XLSX.writeFile(workBook, FileName);\r\n            break;\r\n        }\r\n        dateEnd.setDate(dateEnd.getDate());\r\n      });\r\n  };\r\n\r\n  const ImportFileCount = async () => {\r\n    console.log(formatCount);\r\n    var writeFile = [];\r\n    var login = \"\";\r\n    var likes = false;\r\n    var email = false;\r\n    if (upDown == false) {\r\n      await axios\r\n        .post(\"/api/forum/importDataCount\", {\r\n          Count: value,\r\n          side: \"desc\",\r\n        })\r\n        .then(async (res) => {\r\n          res.data.rows.map((row) => {\r\n            if (row.login == null) {\r\n              login = \"[DELETED]\";\r\n            } else {\r\n              login = row.login;\r\n            }\r\n            try {\r\n              if (\r\n                listExport[0].value === \"like\" ||\r\n                listExport[1].value === \"like\"\r\n              ) {\r\n                likes = true;\r\n              }\r\n            } catch (e) {}\r\n            try {\r\n              if (\r\n                listExport[0].value == \"email\" ||\r\n                listExport[1].value == \"email\"\r\n              ) {\r\n                email = true;\r\n              }\r\n            } catch (e) {}\r\n            console.log(email, likes);\r\n            if (email && likes) {\r\n              writeFile.push({\r\n                id: row.id,\r\n                login: login,\r\n                text: row.text.replaceAll(\"\\n\", \"\"),\r\n                date: row.date,\r\n                email: row.email,\r\n                likes: row.count,\r\n              });\r\n            } else if (email && !likes) {\r\n              writeFile.push({\r\n                id: row.id,\r\n                login: login,\r\n                text: row.text.replaceAll(\"\\n\", \"\"),\r\n                date: row.date,\r\n                email: row.email,\r\n              });\r\n            } else if (!email && likes) {\r\n              writeFile.push({\r\n                id: row.id,\r\n                login: login,\r\n                text: row.text.replaceAll(\"\\n\", \"\"),\r\n                date: row.date,\r\n                likes: row.count,\r\n              });\r\n            } else {\r\n              writeFile.push({\r\n                id: row.id,\r\n                login: login,\r\n                text: row.text.replaceAll(\"\\n\", \"\"),\r\n                date: row.date,\r\n              });\r\n            }\r\n          });\r\n          var FileName = Date.now().toString() + \".\" + formatCount;\r\n          switch (formatCount) {\r\n            case \"json\":\r\n              var text = JSON.stringify(writeFile);\r\n              download(FileName, text, \"json\");\r\n              break;\r\n            case \"xml\":\r\n              var text = \"\";\r\n              if (email && likes) {\r\n                text =\r\n                  '<?xml version=\"1.0\" encoding=\"utf-8\"?> \\n <forumPosts>' +\r\n                  writeFile\r\n                    .map(\r\n                      ({ id, login, text, date, email, likes }) =>\r\n                        `<post category = \"${id}\">\\n <author> ${login}</author> \\n <content> ${text.replaceAll(\r\n                          \"<\",\r\n                          \"\"\r\n                        )}</content> \\n <date> ${date} </date>\\n <email>${email}</email> \\n <like>${likes}</like>\\n </post>`,\r\n                      \" \"\r\n                    )\r\n                    .join(\"\\n\") +\r\n                  \"</forumPosts>\";\r\n              } else if (email && !likes) {\r\n                text =\r\n                  '<?xml version=\"1.0\" encoding=\"utf-8\"?> \\n <forumPosts>' +\r\n                  writeFile\r\n                    .map(\r\n                      ({ id, login, text, date, email, likes }) =>\r\n                        `<post category = \"${id}\">\\n <author> ${login}</author> \\n <content> ${text.replaceAll(\r\n                          \"<\",\r\n                          \"\"\r\n                        )}</content> \\n <date> ${date} </date>\\n <email>${email}</email>\\n </post>`,\r\n                      \" \"\r\n                    )\r\n                    .join(\"\\n\") +\r\n                  \"</forumPosts>\";\r\n              } else if (!email && likes) {\r\n                text =\r\n                  '<?xml version=\"1.0\" encoding=\"utf-8\"?> \\n <forumPosts>' +\r\n                  writeFile\r\n                    .map(\r\n                      ({ id, login, text, date, email, likes }) =>\r\n                        `<post category = \"${id}\">\\n <author> ${login}</author> \\n <content> ${text.replaceAll(\r\n                          \"<\",\r\n                          \"\"\r\n                        )}</content> \\n <date> ${date} </date> \\n <like>${likes}</like>\\n </post>`,\r\n                      \" \"\r\n                    )\r\n                    .join(\"\\n\") +\r\n                  \"</forumPosts>\";\r\n              } else {\r\n                text =\r\n                  '<?xml version=\"1.0\" encoding=\"utf-8\"?> \\n <forumPosts>' +\r\n                  writeFile\r\n                    .map(\r\n                      ({ id, login, text, date, email, likes }) =>\r\n                        `<post category = \"${id}\">\\n <author> ${login}</author> \\n <content> ${text.replaceAll(\r\n                          \"<\",\r\n                          \"\"\r\n                        )}</content> \\n <date> ${date} </date>\\n </post>`,\r\n                      \" \"\r\n                    )\r\n                    .join(\"\\n\") +\r\n                  \"</forumPosts>\";\r\n              }\r\n              download(FileName, text, \"xml\");\r\n              break;\r\n            // !! не меняется кодировка русские символы не читаемые Время 1:25 ДАЙТЕ МНЕ УМЕРЕТЬ\r\n            case \"csv\":\r\n              var opts = {\r\n                delimiter: \";\",\r\n                header: true,\r\n              };\r\n              const csvFile = parse(writeFile, opts);\r\n              download(FileName, csvFile, \"csv\", \"utf8\");\r\n              break;\r\n            case \"xlsx\":\r\n              const workSheet = XLSX.utils.json_to_sheet(writeFile);\r\n              const workBook = XLSX.utils.book_new();\r\n              XLSX.utils.book_append_sheet(workBook, workSheet, \"students\");\r\n              XLSX.write(workBook, { bookType: \"xlsx\", type: \"buffer\" });\r\n              XLSX.write(workBook, { bookType: \"xlsx\", type: \"binary\" });\r\n              XLSX.writeFile(workBook, FileName);\r\n              break;\r\n          }\r\n        });\r\n    } else {\r\n      await axios\r\n        .post(\"/api/forum/importDataCount\", {\r\n          Count: value,\r\n          side: \"asc\",\r\n        })\r\n        .then(async (res) => {\r\n          res.data.rows.map((row) => {\r\n            if (row.login == null) {\r\n              login = \"[DELETED]\";\r\n            } else {\r\n              login = row.login;\r\n            }\r\n            try {\r\n              if (\r\n                listExport[0].value === \"like\" ||\r\n                listExport[1].value === \"like\"\r\n              ) {\r\n                likes = true;\r\n              }\r\n            } catch (e) {}\r\n            try {\r\n              if (\r\n                listExport[0].value == \"email\" ||\r\n                listExport[1].value == \"email\"\r\n              ) {\r\n                email = true;\r\n              }\r\n            } catch (e) {}\r\n            console.log(email, likes);\r\n            if (email && likes) {\r\n              writeFile.push({\r\n                id: row.id,\r\n                login: login,\r\n                text: row.text.replaceAll(\"\\n\", \"\"),\r\n                date: row.date,\r\n                email: row.email,\r\n                likes: row.count,\r\n              });\r\n            } else if (email && !likes) {\r\n              writeFile.push({\r\n                id: row.id,\r\n                login: login,\r\n                text: row.text.replaceAll(\"\\n\", \"\"),\r\n                date: row.date,\r\n                email: row.email,\r\n              });\r\n            } else if (!email && likes) {\r\n              writeFile.push({\r\n                id: row.id,\r\n                login: login,\r\n                text: row.text.replaceAll(\"\\n\", \"\"),\r\n                date: row.date,\r\n                likes: row.count,\r\n              });\r\n            } else {\r\n              writeFile.push({\r\n                id: row.id,\r\n                login: login,\r\n                text: row.text.replaceAll(\"\\n\", \"\"),\r\n                date: row.date,\r\n              });\r\n            }\r\n          });\r\n          var FileName = Date.now().toString() + \".\" + formatCount;\r\n          switch (formatCount) {\r\n            case \"json\":\r\n              var text = JSON.stringify(writeFile);\r\n              download(FileName, text, \"json\");\r\n              break;\r\n            case \"xml\":\r\n              var text = \"\";\r\n              if (email && likes) {\r\n                text =\r\n                  '<?xml version=\"1.0\" encoding=\"utf-8\"?> \\n <forumPosts>' +\r\n                  writeFile\r\n                    .map(\r\n                      ({ id, login, text, date, email, likes }) =>\r\n                        `<post category = \"${id}\">\\n <author> ${login}</author> \\n <content> ${text.replaceAll(\r\n                          \"<\",\r\n                          \"\"\r\n                        )}</content> \\n <date> ${date} </date>\\n <email>${email}</email> \\n <like>${likes}</like>\\n </post>`,\r\n                      \" \"\r\n                    )\r\n                    .join(\"\\n\") +\r\n                  \"</forumPosts>\";\r\n              } else if (email && !likes) {\r\n                text =\r\n                  '<?xml version=\"1.0\" encoding=\"utf-8\"?> \\n <forumPosts>' +\r\n                  writeFile\r\n                    .map(\r\n                      ({ id, login, text, date, email, likes }) =>\r\n                        `<post category = \"${id}\">\\n <author> ${login}</author> \\n <content> ${text.replaceAll(\r\n                          \"<\",\r\n                          \"\"\r\n                        )}</content> \\n <date> ${date} </date>\\n <email>${email}</email>\\n </post>`,\r\n                      \" \"\r\n                    )\r\n                    .join(\"\\n\") +\r\n                  \"</forumPosts>\";\r\n              } else if (!email && likes) {\r\n                text =\r\n                  '<?xml version=\"1.0\" encoding=\"utf-8\"?> \\n <forumPosts>' +\r\n                  writeFile\r\n                    .map(\r\n                      ({ id, login, text, date, email, likes }) =>\r\n                        `<post category = \"${id}\">\\n <author> ${login}</author> \\n <content> ${text.replaceAll(\r\n                          \"<\",\r\n                          \"\"\r\n                        )}</content> \\n <date> ${date} </date> \\n <like>${likes}</like>\\n </post>`,\r\n                      \" \"\r\n                    )\r\n                    .join(\"\\n\") +\r\n                  \"</forumPosts>\";\r\n              } else {\r\n                text =\r\n                  '<?xml version=\"1.0\" encoding=\"utf-8\"?> \\n <forumPosts>' +\r\n                  writeFile\r\n                    .map(\r\n                      ({ id, login, text, date, email, likes }) =>\r\n                        `<post category = \"${id}\">\\n <author> ${login}</author> \\n <content> ${text.replaceAll(\r\n                          \"<\",\r\n                          \"\"\r\n                        )}</content> \\n <date> ${date} </date>\\n </post>`,\r\n                      \" \"\r\n                    )\r\n                    .join(\"\\n\") +\r\n                  \"</forumPosts>\";\r\n              }\r\n              download(FileName, text, \"xml\");\r\n              break;\r\n            case \"csv\":\r\n              var opts = {\r\n                delimiter: \";\",\r\n                header: true,\r\n              };\r\n              const csvFile = parse(writeFile, opts);\r\n              download(FileName, csvFile, \"csv\", \"utf8\");\r\n              break;\r\n            case \"xlsx\":\r\n              const workSheet = XLSX.utils.json_to_sheet(writeFile);\r\n              const workBook = XLSX.utils.book_new();\r\n              XLSX.utils.book_append_sheet(workBook, workSheet, \"students\");\r\n              XLSX.write(workBook, { bookType: \"xlsx\", type: \"buffer\" });\r\n              XLSX.write(workBook, { bookType: \"xlsx\", type: \"binary\" });\r\n              XLSX.writeFile(workBook, FileName);\r\n              break;\r\n          }\r\n        });\r\n    }\r\n  };\r\n\r\n  const handleChangeFormat = (event) => {\r\n    if (event.target.name === \"group1\") {\r\n      switch (event.target.id) {\r\n        case \"1\":\r\n          setFormatDate(\"json\");\r\n          break;\r\n        case \"2\":\r\n          setFormatDate(\"csv\");\r\n          break;\r\n        case \"3\":\r\n          setFormatDate(\"xml\");\r\n          break;\r\n        case \"4\":\r\n          setFormatDate(\"xlsx\");\r\n          break;\r\n      }\r\n    } else {\r\n      switch (event.target.id) {\r\n        case \"1\":\r\n          setFormatCount(\"json\");\r\n          break;\r\n        case \"2\":\r\n          setFormatCount(\"csv\");\r\n          break;\r\n        case \"3\":\r\n          setFormatCount(\"xml\");\r\n          break;\r\n        case \"4\":\r\n          setFormatCount(\"xlsx\");\r\n          break;\r\n      }\r\n    }\r\n  };\r\n\r\n  const changeBlockHandler = async (event) => {\r\n    setUpDown(event.target.checked);\r\n  };\r\n\r\n  const changeListExport = async (event) => {\r\n    listExport = event;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <nav>\r\n        <div className=\"nav-wrapper #689f38 light-green darken-2\">\r\n          <a className=\"brand-logo \">Страница форума</a>\r\n          <ul id=\"nav-mobile\" className=\"right hide-on-med-and-down \">\r\n            <li> Пользователь: {auth.userLogin}</li>\r\n            <li>\r\n              <a href=\"/news/\">Новости</a>\r\n            </li>\r\n            <li>\r\n              <a href=\"/forum/\">Форум</a>{\" \"}\r\n            </li>\r\n            <li>\r\n              <a href=\"/import/\">импорт сообщений</a>{\" \"}\r\n            </li>\r\n            <li>\r\n              <a href=\"/\" onClick={LogoutHandler}>\r\n                выход\r\n              </a>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </nav>\r\n      <div className=\"row\">\r\n        <div className=\"col s12 m6 \">\r\n          <div className=\"card blue-grey darken-1\">\r\n            <div className=\"card-content white-text\">\r\n              <span className=\"card-title\">Импорт по дате</span>\r\n              <div>\r\n                Дата начала импорта\r\n                <DatePickerComponent\r\n                  placeholder=\"Дата начала импорта\"\r\n                  format=\"yyyy/MM/dd\"\r\n                  max={new Date(Date.now())}\r\n                  onChange={handleChangeDateStart}\r\n                ></DatePickerComponent>\r\n                Дата конца импорта\r\n                <DatePickerComponent\r\n                  placeholder=\"Дата конца импорта\"\r\n                  format=\"yyyy/MM/dd\"\r\n                  max={new Date(Date.now())}\r\n                  onChange={handleChangeDateEnd}\r\n                ></DatePickerComponent>\r\n                <p>\r\n                  <form action=\"#\">\r\n                    <p>\r\n                      <label>\r\n                        <input\r\n                          id=\"1\"\r\n                          name=\"group1\"\r\n                          type=\"radio\"\r\n                          onChange={handleChangeFormat}\r\n                        />\r\n                        <span>JSON</span>\r\n                      </label>\r\n                    </p>\r\n                    <p>\r\n                      <label>\r\n                        <input\r\n                          id=\"2\"\r\n                          name=\"group1\"\r\n                          type=\"radio\"\r\n                          onChange={handleChangeFormat}\r\n                        />\r\n                        <span>CSV </span>\r\n                      </label>\r\n                    </p>\r\n                    <p>\r\n                      <label>\r\n                        <input\r\n                          id=\"3\"\r\n                          class=\"with-gap\"\r\n                          name=\"group1\"\r\n                          type=\"radio\"\r\n                          onChange={handleChangeFormat}\r\n                        />\r\n                        <span>XML</span>\r\n                      </label>\r\n                    </p>\r\n                    <p>\r\n                      <label>\r\n                        <input\r\n                          id=\"4\"\r\n                          class=\"with-gap\"\r\n                          name=\"group1\"\r\n                          type=\"radio\"\r\n                          onChange={handleChangeFormat}\r\n                        />\r\n                        <span>XLSX</span>\r\n                      </label>\r\n                    </p>\r\n                  </form>\r\n                </p>\r\n              </div>\r\n            </div>\r\n            <div className=\"card-action\">\r\n              <a style={{ cursor: \"pointer\" }} onClick={ImportFileDate}>\r\n                Импортировать\r\n              </a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col s12 m6 \">\r\n          <div className=\"card blue-grey darken-1\">\r\n            <div className=\"card-content white-text\">\r\n              <span className=\"card-title\">Импорт по колличеству</span>\r\n              <Dropdown\r\n                options={options}\r\n                onChange={handleChangeCount}\r\n                value={value}\r\n              />\r\n              <p>\r\n                <form action=\"#\">\r\n                  <p>\r\n                    <label>\r\n                      <input\r\n                        id=\"1\"\r\n                        name=\"group2\"\r\n                        type=\"radio\"\r\n                        onChange={handleChangeFormat}\r\n                      />\r\n                      <span>JSON</span>\r\n                    </label>\r\n                  </p>\r\n                  <p>\r\n                    <label>\r\n                      <input\r\n                        id=\"2\"\r\n                        name=\"group2\"\r\n                        type=\"radio\"\r\n                        onChange={handleChangeFormat}\r\n                      />\r\n                      <span>CSV </span>\r\n                    </label>\r\n                  </p>\r\n                  <p>\r\n                    <label>\r\n                      <input\r\n                        id=\"3\"\r\n                        name=\"group2\"\r\n                        type=\"radio\"\r\n                        onChange={handleChangeFormat}\r\n                      />\r\n                      <span>XML</span>\r\n                    </label>\r\n                  </p>\r\n                  <p>\r\n                    <label>\r\n                      <input\r\n                        id=\"4\"\r\n                        name=\"group2\"\r\n                        type=\"radio\"\r\n                        onChange={handleChangeFormat}\r\n                      />\r\n                      <span>XLSX</span>\r\n                    </label>\r\n                  </p>\r\n                </form>\r\n              </p>\r\n              <div className=\"switch\">\r\n                <label>\r\n                  С верху\r\n                  <input type=\"checkbox\" onChange={changeBlockHandler} />\r\n                  <span className=\"lever\"></span>С низу\r\n                </label>\r\n              </div>\r\n            </div>\r\n            <div className=\"card-action\">\r\n              <a style={{ cursor: \"pointer\" }} onClick={ImportFileCount}>\r\n                Импортировать\r\n              </a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"col s12 m6\">\r\n        <div class=\"card blue-grey darken-1\">\r\n          <div class=\"card-content white-text\">\r\n            <span class=\"card-title\">Выбрать данные для экспорта</span>\r\n            <p>\r\n              <Select\r\n                options={optionsSwitch}\r\n                isMulti={true}\r\n                styles={colourStyles}\r\n                onChange={changeListExport}\r\n              />\r\n            </p>\r\n          </div>\r\n          <div class=\"card-action\"></div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Import;\r\n","import axios from \"axios\";\r\nimport React, { useContext, useState, useEffect } from \"react\";\r\nimport DOMPurify from \"dompurify\";\r\nimport { AuthContext } from \"../context/authContext\";\r\n\r\nexport const NewsObject = (news) => {\r\n  return (\r\n    <div className=\"col s6\">\r\n      <div className=\"card\">\r\n        <div className=\"card-content\">\r\n          <p>Заголовок: {news.news.title._text}</p>\r\n          <a href={news.news.link._text}>Ссылка</a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewsObject;\r\n","import React, { useState, useEffect, useContext, useCallback } from \"react\";\r\nimport stl from \"./AuthPage.module.css\";\r\nimport axios from \"axios\";\r\nimport { useHistory } from \"react-router\";\r\nimport { AuthContext } from \"../context/authContext\";\r\nimport NewsObject from \"../components/NewsObject\";\r\n\r\nexport const NewsPage = () => {\r\n  const [news, setNews] = useState([]);\r\n  const history = useHistory();\r\n  const auth = useContext(AuthContext);\r\n  const getNews = useCallback(async () => {\r\n    try {\r\n      await axios.get(\"/api/news/getNews\").then((res) => {\r\n        var jsonRes = JSON.parse(res.data);\r\n        setNews(jsonRes.rss.channel.item);\r\n      });\r\n    } catch (e) {\r\n      console.log(e.message);\r\n    }\r\n  }, []);\r\n  const LogoutHandler = (event) => {\r\n    event.preventDefault();\r\n    auth.logout();\r\n    history.push(\"/\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    getNews();\r\n  }, [getNews]);\r\n  return (\r\n    <>\r\n      <nav>\r\n        <div className=\"nav-wrapper #689f38 light-green darken-2\">\r\n          <a className=\"brand-logo \">Страница форума</a>\r\n          <ul id=\"nav-mobile\" className=\"right hide-on-med-and-down \">\r\n            <li> Пользователь: {auth.userLogin}</li>\r\n            <li>\r\n              <a href=\"/news/\">Новости</a>\r\n            </li>\r\n            <li>\r\n              <a href=\"/forum/\">Форум</a>{\" \"}\r\n            </li>\r\n            <li>\r\n              <a href=\"/import/\">импорт сообщений</a>{\" \"}\r\n            </li>\r\n            <li>\r\n              <a href=\"/\" onClick={LogoutHandler}>\r\n                выход\r\n              </a>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </nav>\r\n      <div>\r\n        <h2>НОВОСТИ</h2>\r\n        <div className=\"row\">\r\n          {news.map((object) => (\r\n            <NewsObject news={object} />\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NewsPage;\r\n","import { useState, useCallback, useEffect } from \"react\";\r\n\r\nconst storageName = \"userData\";\r\n\r\nexport const useAuth = () => {\r\n  const [token, setToken] = useState(null);\r\n  const [userId, setUserId] = useState(null);\r\n  const [ready, setReady] = useState(false);\r\n  const [userLogin, setUserLogin] = useState(null);\r\n  const [isAdmin, setIsAdmin] = useState(null);\r\n  const [isBlock, setIsBlock] = useState(null);\r\n\r\n  const login = useCallback((megaToken, id, name, admin, block) => {\r\n    setUserId(id);\r\n    setToken(megaToken);\r\n    setUserLogin(name);\r\n    setIsAdmin(admin);\r\n    setIsBlock(block);\r\n    localStorage.setItem(\r\n      storageName,\r\n      JSON.stringify({\r\n        userId: id,\r\n        token: megaToken,\r\n        userLogin: name,\r\n        isAdmin: admin,\r\n        isBlock: block,\r\n      })\r\n    );\r\n  }, []);\r\n\r\n  const logout = useCallback(() => {\r\n    setToken(null);\r\n    setUserId(null);\r\n    setUserLogin(null);\r\n    setIsAdmin(null);\r\n    setIsBlock(null);\r\n    localStorage.removeItem(storageName);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const data = JSON.parse(localStorage.getItem(storageName));\r\n\r\n    if (data && data.token) {\r\n      login(\r\n        data.token,\r\n        data.userId,\r\n        data.userLogin,\r\n        data.isAdmin,\r\n        data.isBlock\r\n      );\r\n    }\r\n    setReady(true);\r\n  }, [login]);\r\n\r\n  return { login, logout, token, userId, userLogin, ready, isAdmin, isBlock };\r\n};\r\n","import React from \"react\";\r\n\r\nexport const Loader = () => {\r\n  return (\r\n    <div class=\"progress\">\r\n      <div class=\"indeterminate\"></div>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport \"materialize-css\";\r\nimport { useRoutes } from \"./routes\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport { useAuth } from \"./hooks/auth.hook\";\r\nimport { AuthContext } from \"./context/authContext\";\r\nimport { Loader } from \"./components/Loader\";\r\n\r\nfunction App() {\r\n  const { token, login, logout, userId, userLogin, ready, isAdmin, isBlock } =\r\n    useAuth();\r\n  const isAuthent = !!token;\r\n  const routes = useRoutes(isAuthent);\r\n\r\n  if (!ready) {\r\n    return <Loader />;\r\n  }\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        token,\r\n        login,\r\n        logout,\r\n        userId,\r\n        isAuthent,\r\n        userLogin,\r\n        isAdmin,\r\n        isBlock,\r\n      }}\r\n    >\r\n      <Router>\r\n        <div className=\"container\">{routes}</div>\r\n      </Router>\r\n    </AuthContext.Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\nimport { AuthPage } from \"./pages/AuthPage\";\r\nimport { ForumPage } from \"./pages/ForumPage\";\r\nimport { RegisterPage } from \"./pages/RegisterPage\";\r\nimport { Import } from \"./pages/ImportPage\";\r\nimport NewsPage from \"./pages/NewsPage\";\r\n\r\nexport const useRoutes = (isAuth) => {\r\n  if (isAuth) {\r\n    return (\r\n      <Switch>\r\n        <Route path=\"/forum/\" exact>\r\n          <ForumPage />\r\n        </Route>\r\n        <Route path=\"/import/\" exact>\r\n          <Import />\r\n        </Route>\r\n        <Route path=\"/news/\" exact>\r\n          <NewsPage />\r\n        </Route>\r\n        <Redirect to=\"/forum/\" />\r\n      </Switch>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Switch>\r\n      <Route path=\"/login\">\r\n        <AuthPage />\r\n      </Route>\r\n      <Route path=\"/register\">\r\n        <RegisterPage />\r\n      </Route>\r\n      <Redirect to=\"/login\" />\r\n    </Switch>\r\n  );\r\n};\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"AuthPage_login__1NZaP\",\"inputs\":\"AuthPage_inputs__2xggD\",\"username\":\"AuthPage_username__1puJP\",\"password\":\"AuthPage_password__r4bdW\",\"actions\":\"AuthPage_actions__2ZMkF\",\"submit\":\"AuthPage_submit__kLzFG\",\"back\":\"AuthPage_back__3-kQs\",\"vladmaxi-top\":\"AuthPage_vladmaxi-top__P2LYO\",\"slideOut\":\"AuthPage_slideOut__9xm7K\",\"right\":\"AuthPage_right__1Q_9_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"RegisterPage_login__1SXp7\",\"inputs\":\"RegisterPage_inputs__2RINt\",\"username\":\"RegisterPage_username__1tSzO\",\"password\":\"RegisterPage_password__2VU2G\",\"actions\":\"RegisterPage_actions__2t1OW\",\"submit\":\"RegisterPage_submit__jgUh_\",\"back\":\"RegisterPage_back__1tX4K\",\"vladmaxi-top\":\"RegisterPage_vladmaxi-top__PvOGN\",\"slideOut\":\"RegisterPage_slideOut__jN8ft\",\"right\":\"RegisterPage_right__3N-cy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"new\":\"BlockMessItem_new__2fk7r\",\"showON\":\"BlockMessItem_showON__17Nni\",\"blink2\":\"BlockMessItem_blink2__KpyEv\"};"],"sourceRoot":""}